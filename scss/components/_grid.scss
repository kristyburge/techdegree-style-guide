.container {
  background: $white;
  margin: 0 auto;
  padding: 0 em(20px);
  @include mq(large) {
    max-width: 1050px;
  }
}

.grid__row {
  width: 90%;
  margin: em(10px) auto em($base__line);
  @include flex-box(column);
    &:first-of-type {
      align-items: center;
    }
  @include mq(med) {
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-between;
  }
}

[class^='grid__col--'] {
  @include flex-box(column);
  width: 100%;
  @include mq(med) {
    flex-direction: row;
    justify-content: flex-end;
  }
}

.grid__col {
  // Loop through to add background to Grid section
  @each $col, $color in $grid-colors {
      &--#{$col}.theme__colors {
        @extend %rounded;
        text-align: center;
        background: $color;
      }
  }
}

// Create a loop to calculate fluid grid sizes at larger screensize
@include mq(med) {
  @for $i from 1 through $grid-col-count {
    $context: grid-context( $grid-col-width, $grid-col-count, $grid-gutter-width ) !global;
    $target: ( $grid-col-width * $i ) + ( $grid-gutter-width * ( $i - 1 ) );
    // generates column classes
    .grid__col--#{$i} {
        width: percentage( $target / $context );
        justify-content: center;
    }
  }
}

// Column styles (target all column classes)
[class^='grid__col--'] {
    margin-top: em(12px);
    margin-bottom: em(12px);

  @include mq(med) {
    @include double-amp(percentage( $grid-gutter-width / $context ));
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
  }
}

.centered {
  margin: 0 auto;
}
